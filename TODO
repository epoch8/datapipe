Filter:
    ☐ Добавить список фильтров как тип
    ✔ Добавить фильтрацию для gen_process_many @done(21-10-26 23:27)

One-to-many:
    ☐ Добавить схему данных как класс
    ☐ Считать хеш-сумму в Store
    ☐ Сделать MetaTable декоратором над транзакцией (или DataTable?)
    ☐ Причесать работу с primary_schema

TODO:
    ☐ Сделать прогрессбар для gen_* шага
    ☐ Добавить возможность передавать аргументы в *Generate и *Transform
    ☐ Сделать возможность передавать fsspec urls в TableStoreFiledir, ex: zip://{label}/{id}_test.jpg::./CATALOG_DIR/archive.zip
    ☐ Ускорить обновление метадаты: заменить удаление/создание на апдейт
    ☐ Many-to-one, one-to-many
    ☐ Переехать на SQLAlchemy 1.4 https://www.sqlalchemy.org/blog/2021/03/15/sqlalchemy-1.4.0-released/
    ☐ Сделать "контекст записи"/"контекст чтения" для TableDataStore чтобы можно было кешировать операции чтения
    ☐ Сделать синхронизацию DataStore с метадатой, как отдельный шаг
    
Ветка Label Studio:
    ☐ Починить баг с авторизацией в 1.0.2+ лейбел студии (в 1.0.1 работает)
        UPD: Баг на их стороне, починить пока не смогу, см. https://github.com/heartexlabs/label-studio/issues/1049
    ☐ Подумать об обработке Run в лейбел студии в случае, когда сервис не запущен
        Сценарий: если LS будет уничтожен и пересоздан, то наша синхронизация не зальет туда задачи заново (возможно, с разметкой)
    ☐ Идемпотентная запись задач в LS, если задача уже есть, то она должна обновляться, а не дублироваться

Archive:
  ✔ Объединить DataTable и MetaTable @done(21-10-03 19:07) @project(One-to-many)
  ✔ Перенести создание MetaTable в DataStore @done(21-09-26 21:03) @project(One-to-many)
  ✔ Перенести логику работы со списком таблиц из dsl.Catalog в DataStore @done(21-09-26 21:03) @project(One-to-many)
  ✔ Передвинуть глобальные функции inc_process, gen_process вниз datatable @done(21-09-26 21:05) @project(One-to-many)
  ✔ get_metadata @done(21-10-03 19:07) @project(One-to-many)
  ✔ get_existing_idx @done(21-10-03 19:07) @project(One-to-many)
  ✔ get_table_debug_info @done(21-10-03 19:07) @project(One-to-many)
  ✔ store_chunk @done(21-10-03 19:07) @project(One-to-many)
  ✔ Реализовать общие тесты для всех table_store @done(21-09-26 16:48) @project(One-to-many)
  ✔ Реализовать честный апдейт данных в MetaTable @done(21-07-31 01:03) @project(One-to-many)
  ✔ Вынести работу с БД в MetaTable отдельно от DBStore @done(21-07-24 21:40) @project(One-to-many)
  ✔ Добавить поддержку дополнительных полей в MetaTable @done(21-09-26 14:46) @project(One-to-many)
  ✔ Добавить индексацию Store на основе индексного датафрейма (а не индекса) @done(21-09-26 14:46) @project(One-to-many)
  ✔ Перейти с id индекса, на произвольный индекс в DataTable @done(21-09-26 14:46) @project(One-to-many)
  ✔ Удалить ConstIdx из Store @done(21-09-26 14:46) @project(TODO)
  ✔ Не удалять метаданные при удалении строк @done(21-09-26 14:47) @project(TODO)
  ✔ Поддержка внешних хранилищ для данных (папка с файлами) @project(TODO)
  ✔ Полноценные тесты @project(TODO)
  ✔ Использование конструктора запросов SQLAlchemy вместо сырого SQL @project(TODO)
  ✔ Поддержка SQLite @project(TODO)
  ✔ Добавить тест на sign up @project(Ветка Label Studio)
  ✔ Унести Project Setting в Лейбел Студию внутрь @project(Ветка Label Studio)
  ✔ Унести добавление unique_id в Лейбел Студию внутрь @project(Ветка Label Studio)
  ✔ Переписать получение текущей разметки через yield @project(Ветка Label Studio)
  ✔ Добавить параметры и тесты на data, annotations и predictions @project(Ветка Label Studio)
